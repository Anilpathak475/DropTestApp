apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    flavorDimensions "staging"
    def versionPropsFile = file('version.properties')
    def code
    def name

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        code = versionProps['VERSION_CODE'].toInteger()
        name = versionProps['VERSION_NAME']
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {
        release {
            storeFile file("../keystore/customer_release.jks")
            storePassword "metrozip"
            keyAlias "metrozip"
            keyPassword "metrozip"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        production {
            minSdkVersion 17
            applicationId 'com.cityzipcorp.customer'
            targetSdkVersion 27
            versionCode code
            versionName name
            multiDexEnabled true
            versionName '1.0'
            multiDexEnabled true
            buildConfigField 'String', 'BASE_URL_CONTRACT', "\"https://api-preprod.cityzipcorp.in\""
            resValue 'string', 'google_maps_api_key', "\"AIzaSyDAmlBKUTYq6bc3D42L7i9_krGre-zvUrg\""
        }

        preprod {
            minSdkVersion 17
            applicationId 'com.cityzipcorp.driver.preprod'
            targetSdkVersion 26
            versionCode code
            versionName name
            multiDexEnabled true
            buildConfigField 'String', 'BASE_URL', "\"https://api-preprod.cityzipcorp.in\""
            buildConfigField 'String', 'LOCATION_URL', "\"https://api-location-preprod.cityzipcorp.in/api/v1/gpslogs/collect/\""
            buildConfigField 'String', 'LOCATION_API_TOKEN', "\"d9b3a7d17de8386cfdf28e7e0251f062b22e76e5\""
            resValue 'string', 'google_maps_api_key', "\"AIzaSyBoKzJEERnb-Ib4rDOxPT7HG6p9WV1R4wI\""
        }

        staging {
            minSdkVersion 17
            applicationId 'com.cityzipcorp.customer.staging'
            targetSdkVersion 27
            versionCode code
            versionName name
            multiDexEnabled true
            buildConfigField 'String', 'BASE_URL_CONTRACT', "\"https://api-staging.cityzipcorp.in/api/v1/customer_contracts/summary/\""
            resValue 'string', 'google_maps_api_key', "\"AIzaSyDUj5kX3TqwW3pCStQpK43oswapBCvLc-s\""

        }
    }
    buildToolsVersion '27.0.3'
}


ext {
    supportVersion = '27.1.1'
}
buildscript {
    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }

    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:support-v4:$supportVersion"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.brandongogetap:stickyheaders:0.5.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.android.gms:play-services-base:15.0.1'
    implementation 'com.google.android.gms:play-services-basement:15.0.1'
    implementation 'com.google.android.gms:play-services-safetynet:15.0.1'
    implementation 'com.google.android.gms:play-services-tasks:15.0.1'
    implementation 'com.github.lawloretienne:discreteslider:0.0.9'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.google.zxing:core:3.3.2'
    implementation 'com.google.firebase:firebase-core:16.0.1'

    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.scottyab:aescrypt:0.0.1'
    implementation 'com.marlonmafra.android.widget:edittext-password:1.0.0'
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-places:15.0.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.jetbrains:annotations-java5:15.0'
}

task incrementVersionCode {
    gradle.taskGraph.whenReady { taskGraph ->
        def versionPropsFile = file('version.properties')

        /* when run release task */
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))

            def code = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }
}
apply plugin: 'com.google.gms.google-services'
